[{"/Users/nithishkarthik/Desktop/InstaAPI/instaapi/src/index.js":"1","/Users/nithishkarthik/Desktop/InstaAPI/instaapi/src/reportWebVitals.js":"2","/Users/nithishkarthik/Desktop/InstaAPI/instaapi/src/App.js":"3"},{"size":478,"mtime":1608367242364,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1608366799823,"results":"6","hashOfConfig":"5"},{"size":993,"mtime":1608440112666,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"10odxfv",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nithishkarthik/Desktop/InstaAPI/instaapi/src/index.js",[],["15","16"],"/Users/nithishkarthik/Desktop/InstaAPI/instaapi/src/reportWebVitals.js",[],"/Users/nithishkarthik/Desktop/InstaAPI/instaapi/src/App.js",["17","18","19"],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":5,"column":9,"nodeType":"26","messageId":"27","endLine":5,"endColumn":15},{"ruleId":"24","severity":1,"message":"28","line":11,"column":9,"nodeType":"26","messageId":"27","endLine":11,"endColumn":16},{"ruleId":"29","severity":1,"message":"30","line":21,"column":16,"nodeType":"31","endLine":21,"endColumn":50},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]